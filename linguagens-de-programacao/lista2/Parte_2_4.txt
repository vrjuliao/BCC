4. Dado o programa
z := 0; while y ≤ x do (z := z+1; x := x-y)
construa uma árvore de derivação para este programa quando executado em um estado
em que x tem valor 17 e y tem valor 5.

--------------------------------
| s0 | x = 17 | y = 5  | z = 0 |
--------------------------------
| s1 | x = 17 | y = 5  | z = 1 |
--------------------------------
| s2 | x = 12 | y = 5  | z = 1 |
--------------------------------
| s3 | x = 12 | y = 5  | z = 2 |
--------------------------------
| s4 | x = 7  | y = 5  | z = 2 |
--------------------------------
| s5 | x = 7  | y = 5  | z = 3 |
--------------------------------
| s6 | x = 2  | y = 5  | z = 3 |
--------------------------------


        <z:=0, s> -> s0   <T1, s0> -> s2    <T2, s2> -> s4   <T3, s4> -> s6    <T4, s6> -> s6
ROOT: --------------------------------------------------------------------------------------
                    <z := 0; while y ≤ x do (z := z+1; x := x-y), s> -> s


              <z := z+1, s0> -> s1     <x := x-y, s1> -> s2
T1:   ---------------------------------------------------------------------
   B[[s0[y] <= s0[x]]] = tt   while y ≤ x do (z := z+1; x := x-y), s0> -> s2


              <z := z+1, s2> -> s3     <x := x-y, s3> -> s4
T2:   ---------------------------------------------------------------------
   B[[s2[y] <= s2[x]]] = tt   while y ≤ x do (z := z+1; x := x-y), s2> -> s4


              <z := z+1, s4> -> s5     <x := x-y, s5> -> s6
T3:   ---------------------------------------------------------------------
   B[[s4[y] <= s4[x]]] = tt   while y ≤ x do (z := z+1; x := x-y), s4> -> s6


T4: B[[s6[y] <= s6[x]]] = ff   while y ≤ x do (z := z+1; x := x-y), s6> -> s6
